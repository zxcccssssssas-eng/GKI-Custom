name: Android12-5.10-Custom

on: 
  workflow_dispatch:
    inputs:
      os_patch_level:
        required: true
        type: string
        description: >
          Patch level of common kernel manifest,
          for example: 2024-05
      os_version:
        required: true
        type: string
        description: >
          OS Version of boot image
          for example: 12.0.0
      version_name:
        required: true
        type: string
        description: >
          With SUBLEVEL of kernel,
          for example: android12-5.10.209
      custom:
        required: true
        type: boolean
        description: >
          Enable LXC, Docker
      kernelsu:
        required: true
        type: boolean
        description: >
          Enable KernelSU

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt install repo wget -y

    - name: Sync the kernel source code
      run: |
        cd $GITHUB_WORKSPACE
        mkdir android-kernel
        cd android-kernel
        repo init --depth 1 -u https://android.googlesource.com/kernel/manifest -b common-android12-5.10-${{ inputs.os_patch_level }}
        repo sync

    - name: Apply patches and configuration files
      if: ${{ inputs.custom == true }}
      run: |
        cd $GITHUB_WORKSPACE
        git clone https://github.com/zxcccssssssas-eng/GKI-Custom gki-patch
        cp ./gki-patch/config/gki_defconfig-android12-5.10 ./android-kernel/common/arch/arm64/configs/gki_defconfig
        cd ./android-kernel/common
        git apply $GITHUB_WORKSPACE/gki-patch/patchs/*.patch

    - name: KernelSU
      if: ${{ inputs.kernelsu == true }}
      run: |
          cd $GITHUB_WORKSPACE/android-kernel
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -

    - name: Build Kernel
      run: |
        cd $GITHUB_WORKSPACE/android-kernel
        echo "        mm/zsmalloc.ko

        crypto/lzo.ko

        crypto/lzo-rle.ko

        drivers/phy/mediatek/phy-mtk-tphy.ko

        drivers/phy/mediatek/phy-mtk-ufs.ko

        drivers/phy/mediatek/phy-mtk-xsphy.ko

        drivers/pwm/pwm-mtk-disp.ko

        drivers/dma/mediatek/mtk-uart-apdma.ko

        drivers/dma/mediatek/mtk-cqdma.ko

        drivers/soc/mediatek/mtk-pmic-wrap.ko

        drivers/regulator/mt6358-regulator.ko

        drivers/regulator/mt6360-regulator.ko

        drivers/reset/reset-ti-syscon.ko

        drivers/tty/serial/8250/8250_mtk.ko

        drivers/gpu/drm/mediatek/mediatek-drm.ko

        drivers/block/zram/zram.ko

        drivers/mfd/mt6360-core.ko

        drivers/mfd/mt6397.ko

        drivers/dma-buf/heaps/system_heap.ko

        drivers/scsi/ufs/ufs-mediatek.ko

        drivers/spi/spi-mt65xx.ko

        drivers/net/usb/asix.ko

        drivers/net/usb/ax88179_178a.ko

        drivers/usb/phy/phy-generic.ko

        drivers/usb/host/xhci-mtk-hcd.ko

        drivers/usb/mtu3/mtu3.ko

        drivers/input/keyboard/mtk-pmic-keys.ko

        drivers/rtc/rtc-mt6397.ko

        drivers/i2c/busses/i2c-mt65xx.ko

        drivers/media/v4l2-core/v4l2-flash-led-class.ko

        drivers/power/reset/reboot-mode.ko

        drivers/power/reset/syscon-reboot-mode.ko

        drivers/power/supply/bq27xxx_battery.ko

        drivers/power/supply/bq27xxx_battery_i2c.ko

        drivers/thermal/thermal-generic-adc.ko

        drivers/watchdog/mtk_wdt.ko

        drivers/mmc/core/pwrseq_simple.ko

        drivers/mmc/host/mtk-sd.ko

        drivers/mmc/host/cqhci.ko

        drivers/leds/leds-pwm.ko

        drivers/memory/mtk-smi.ko

        drivers/iio/adc/mt6577_auxadc.ko

        drivers/iio/buffer/industrialio-triggered-buffer.ko

        drivers/iio/buffer/kfifo_buf.ko

        drivers/perf/arm_dsu_pmu.ko

        drivers/tee/tee.ko

        net/wireless/cfg80211.ko

        net/mac80211/mac80211.ko" > common/android/gki_aarch64_modules
        BUILD_CONFIG=common/build.config.gki.aarch64 build/config.sh savedefconfig
        LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh

    - name: Prepare artifacts
      id: prepareArtifacts
      run: |
        cd $GITHUB_WORKSPACE
        OUTDIR=android-kernel/out/android12-5.10/dist
        mkdir output
        cp $OUTDIR/Image ./output/
        cp $OUTDIR/Image.lz4 ./output/
        cp $OUTDIR/Image ./
        gzip -n -k -f -9 Image >Image.gz
        git clone https://github.com/Kernel-SU/AnyKernel3
        rm -rf ./AnyKernel3/.git
        cp $OUTDIR/Image ./AnyKernel3/
        wget https://dl.google.com/android/gki/gki-certified-boot-android12-5.10-${{ inputs.os_patch_level }}_r1.zip -O ./gki-kernel.zip
        unzip -q ./gki-kernel.zip
        rm ./gki-kernel.zip
        cd $GITHUB_WORKSPACE/android-kernel
        echo "Unpack boot"
        ./tools/mkbootimg/unpack_bootimg.py --boot_img $GITHUB_WORKSPACE/boot*.img
        echo "Build boot.img"
        ./tools/mkbootimg/mkbootimg.py --header_version 4 --kernel out/android12-5.10/dist/Image --ramdisk out/ramdisk --os_version ${{ inputs.os_version }} --os_patch_level ${{ inputs.os_patch_level }} -o $GITHUB_WORKSPACE/output/${{ inputs.version_name }}_${{ inputs.os_patch_level }}-boot.img
        echo "Build boot-lz4.img"
        ./tools/mkbootimg/mkbootimg.py --header_version 4 --kernel out/android12-5.10/dist/Image.lz4 --ramdisk out/ramdisk --os_version ${{ inputs.os_version }} --os_patch_level ${{ inputs.os_patch_level }} -o $GITHUB_WORKSPACE/output/${{ inputs.version_name }}_${{ inputs.os_patch_level }}-boot-lz4.img
        echo "Build boot-gz.img"
        ./tools/mkbootimg/mkbootimg.py --header_version 4 --kernel $GITHUB_WORKSPACE/Image.gz --ramdisk out/ramdisk --os_version ${{ inputs.os_version }} --os_patch_level ${{ inputs.os_patch_level }} -o $GITHUB_WORKSPACE/output/${{ inputs.version_name }}_${{ inputs.os_patch_level }}-boot-gz.img

    - name: Upload Image and Image.gz and boot.img
      uses: actions/upload-artifact@v4
      with:
        name: Image-${{ inputs.version_name }}_${{ inputs.os_patch_level }}
        path: ./output/*

    - name: Upload AnyKernel3
      uses: actions/upload-artifact@v4
      with:
        name: AnyKernel3-${{ inputs.version_name }}_${{ inputs.os_patch_level }}
        path: ./AnyKernel3/*
    - name: Upload config
      uses: actions/upload-artifact@v4
      with:
        name: modules.order
        path: /home/runner/work/GKI-Custom/GKI-Custom/android-kernel/out/android12-5.10/common/modules.order
